# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- name: var1
  value: 'var1'
- name: mySecret
  value: $(secret.Sauce)

steps:
- pwsh: ./setvars.ps1
- task: PowerShell@2
  inputs:
    filePath: './helloworld.ps1'
    arguments: '-sauceArgument "$(sauce)" -secretSauceArgument "$(secret.Sauce)"'
# - pwsh: ./VersionAssemblies.ps1
- pwsh: echo $(Build.BuildNumber) //output updated build number

# - pwsh: |
#    Write-Host "##vso[task.setvariable variable=sauce]peeled tomatoes"
#    Write-Host "##vso[task.setvariable variable=secret.Sauce;issecret=true]peeled tomatoes with garlic"
# - task: PowerShell@2
#   inputs:
#     targetType: 'inline'
#     script: |
#       # Write your PowerShell commands here.

#       Write-Host No problem reading $(sauce)
#       Write-Host But I cannot read $env:SECRET_SAUCE
#       Write-Host But I can read $(secret.Sauce) "(but the log is redacted so I do not spoil the secret)"
#       Write-Host Can I read mySecret? $(mySecret)
#       Write-Host Can I read secret.sauce? $(secret.Sauce)

# - task: CmdLine@2
#   inputs:
#     script: |
#       echo "No problem reading $(sauce)""
#       echo "But I cannot read $SECRET_SAUCE"
#       echo "But I can read $(secret.Sauce) (but the log is redacted so I do not spoil the secret)"
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo "##vso[task.setvariable variable=sauce]crushed tomatoes"
      echo "##vso[task.setvariable variable=secret.Sauce;issecret=true]crushed tomatoes with garlic"
      echo "No problem reading $SAUCE"
      echo "But I cannot read $SECRET_SAUCE"

- bash: |
    echo "No problem reading $SAUCE"
    echo "But I cannot read $SECRET_SAUCE"
  



